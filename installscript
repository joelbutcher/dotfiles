#!/bin/bash

# Hide "last login" line when starting a new terminal session
touch $HOME/.hushlogin

# Install zsh
echo 'Install oh-my-zsh'
echo '-----------------'
rm -rf $HOME/.oh-my-zsh
curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh

# Add global gitignore
ln -s $PWD/shell/.global-gitignore $HOME/.global-gitignore
git config --global core.excludesfile $HOME/.global-gitignore

# Symlink gitconfig
rm $HOME/.gitconfig
ln -s $PWD/shell/.gitconfig $HOME/.gitconfig

# Symlink zsh prefs
rm $HOME/.zshrc
ln -s $PWD/shell/.zshrc $HOME/.zshrc

rm $HOME/.zsh
ln -s $PWD/shell/.zsh $HOME/.zsh

rm $HOME/.warp
ln -s $PWD/shell/.warp $HOME/.warp

rm $HOME/.p10k
ln -s $PWD/shell/.p10k $HOME/.p10k

rm $HOME/.config/starship.toml
ln -s $PWD/shell/starship.toml $HOME/.config/starship.toml

rm $HOME/.zshenv
ln -s $PWD/shell/.zshenv $HOME/.zshenv

# Symlink vim prefs
rm $HOME/.vimrc
ln -s $PWD/shell/.vimrc $HOME/.vimrc

# Symlink the Mackup config
ln -s $PWD/macos/.mackup.cfg $HOME/.mackup.cfg

echo 'Configure npm'
echo '-------------'
# Create a directory for global packages and tell npm where to store globally installed packages
mkdir "${HOME}/.npm-packages"
npm config set prefix "${HOME}/.npm-packages"

echo 'Install homebrew'
echo '----------------'
echo install homebrew
sudo rm -rf /usr/local/Cellar /usr/local/.git && brew cleanup
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> /Users/freek/.zprofile
eval "$(/opt/homebrew/bin/brew shellenv)"

echo 'Install node'
echo '------------'
brew install node

echo 'Install wget'
echo '------------'
brew install wget

echo 'Install GitHub CLI'
echo '------------------'
brew install gh

echo 'Install Starship'
echo '----------------'
brew install starship

echo 'Install Nerd Fonts'
echo '------------------'
$PWD/shell/nerd-fonts

echo 'Configure starship preset'
echo '-------------------------'
starship preset nerd-font-symbols > ~/.config/starship.toml

echo 'Install some nice quicklook plugins'
echo '-----------------------------------'
brew install --cask qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzip  suspicious-package

echo 'Install php'
echo '-----------'
brew install php

echo 'Install composer'
echo '----------------'
EXPECTED_COMPOSER_CHECKSUM="$(curl https://composer.github.io/installer.sig)"
php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
ACTUAL_COMPOSER_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"
if [ "$EXPECTED_COMPOSER_CHECKSUM" != "$ACTUAL_COMPOSER_CHECKSUM" ]
then
    >&2 echo 'ERROR: Invalid installer checksum'
    rm composer-setup.php
    exit 1
fi
php composer-setup.php
rm composer-setup.php
sudo mkdir /usr/local/bin/
sudo mv composer.phar /usr/local/bin/composer

echo 'Install imagemagick'
echo '-------------------'
brew install imagemagick

echo 'Install imagick'
echo '---------------'
pecl install imagick

echo 'Install memcached'
echo '-----------------'
pecl install memcached

echo 'Install xdebug'
echo '--------------'
pecl install xdebug

echo 'Install redis'
echo '-------------'
pecl install redis

echo 'Install phpunit-watcher'
echo '-----------------------'
composer global require spatie/phpunit-watcher

echo 'Install laravel valet'
echo '---------------------'
composer global require laravel/valet
valet install

echo 'Install mysql'
echo '-------------'
brew install mysql
brew services start mysql

echo 'Install yarn'
echo '------------'
brew install yarn

echo 'Install ghostscript'
echo '-------------------'
brew install ghostscript

echo 'Install mackup'
echo '--------------'
brew install mackup

echo 'Install zsh-autosuggestions'
echo '---------------------------'
brew install zsh-autosuggestions

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
echo 'All done!'
echo 'Things to do to make the agnoster terminal theme work:'
echo '1. Install menlo patched font included in ~/.dotfiles/misc https://gist.github.com/qrush/1595572/raw/Menlo-Powerline.otf'
echo '2. Install patched solarized theme included in ~/.dotfiles/misc'

echo '++++++++++++++++++++++++++++++'
echo 'Some optional tidbits'

echo '1. Make sure dropbox is running first. If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
echo '2. Set some sensible os x defaults by running: $PWD/macos/set-defaults.sh'
echo '3. Make a .dotfiles-custom/shell/.aliases for your personal commands'

echo '++++++++++++++++++++++++++++++'
echo '++++++++++++++++++++++++++++++'
