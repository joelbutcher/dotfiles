#!/bin/bash

if [[ -t 1 ]]
then
  tty_escape() { printf "\033[%sm" "$1"; }
else
  tty_escape() { :; }
fi
tty_mkbold() { tty_escape "1;$1"; }
tty_underline="$(tty_escape "4;39")"
tty_blue="$(tty_mkbold 34)"
tty_red="$(tty_mkbold 31)"
tty_bold="$(tty_mkbold 39)"
tty_reset="$(tty_escape 0)"

shell_join() {
  local arg
  printf "%s" "$1"
  shift
  for arg in "$@"
  do
    printf " "
    printf "%s" "${arg// /\ }"
  done
}

chomp() {
  printf "%s" "${1/"$'\n'"/}"
}

ohai() {
  printf "${tty_blue}==>${tty_bold} %s${tty_reset}\n" "$(shell_join "$@")"
}

warn() {
  printf "${tty_red}Warning${tty_reset}: %s\n" "$(chomp "$1")" >&2
}

reset_configs() {
  rm -rf $HOME/.composer
  rm -rf $HOME/.config
    mkdir $HOME/.config
}

silent_login() {
  ohai 'Hide "last login" line when starting a new terminal session'
  touch $HOME/.hushlogin
}

install_zsh() {
  ohai 'Install oh-my-zsh'
  rm -rf $HOME/.oh-my-zsh
  curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
}

symlink_dotfiles() {
  ohai 'Symlinking dotfiles'

  # Symlink gitconfig
  rm $HOME/.gitconfig
  ln -s $HOME/.dotfiles/shell/.gitconfig $HOME/.gitconfig

  # Symlink zsh prefs
  rm $HOME/.zshrc
  ln -s $HOME/.dotfiles/shell/.zshrc $HOME/.zshrc

  rm -rf $HOME/.zsh
  ln -s $HOME/.dotfiles/shell/.zsh $HOME/.zsh

  rm -rf $HOME/.p10k
  ln -s $HOME/.dotfiles/shell/.p10k $HOME/.p10k

  rm $HOME/.zshenv
  ln -s $HOME/.dotfiles/shell/.zshenv $HOME/.zshenv

  # Symlink vim prefs
  rm $HOME/.vimrc
  ln -s $HOME/.dotfiles/shell/.vimrc $HOME/.vimrc

  # Symlink the Mackup config
  rm $HOME/.mackup.cfg
  ln -s $HOME/.dotfiles/macos/.mackup.cfg $HOME/.mackup.cfg
}

install_brew() {
    brew_version=$(brew -v 2> /dev/null)

    if [ $? -ne 0 ]; then
        ohai 'Installing Brew'
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"


    else
        ohai "$brew_version already installed"
    fi
}

install_herd() {
    if brew list --cask | grep herd &> /dev/null; then
        ohai 'Herd already installed'
    else
        ohai 'Installing Herd'
        brew install --cask herd
        source ~/.zshrc
    fi
}

install_dbngin() {
    if brew list --cask | grep dbngin &> /dev/null; then
        ohai 'DBngin already installed'
    else
        ohai 'Installing DBngin'
        brew install --cask dbngin
    fi
}

install_tools() {
    ohai 'Installing recommended tools'
    brew install gh jq bat httpie ack doctl ncdu hub mackup zsh-autosuggestions
    brew install --cask jetbrains-toolbox visual-studio-code phpstorm tableplus rectangle warp raycast arc google-chrome bartender nordvpn nordlayer 1password logi-options-plus readdle-spark telegram whatsapp messenger postman
}

configure_warp_terminal() {
  ohai 'Configuring Warp Terminal'
  rm -rf $HOME/.warp
  ln -s $HOME/.dotfiles/shell/.warp $HOME/.warp
}

install_laravel() {
    ohai 'Installing Laravel'
    composer global require laravel/installer
}

start_herd() {
    ohai 'Starting Herd'
    herd start
}

auth_github() {
    login=$(gh api user 2> /dev/null)

    if [ $? -ne 0 ]; then
        ohai 'Not authenticated with Github, prompting authentication now'
        gh auth login
    else
        login=$(echo $login | jq '"\(.name) (\(.login))"')
        ohai "Authenticated with Github as $login"
    fi
}

farewell() {
    ohai 'Install complete. Have a nice day!'
    echo -e "
To make your life easier, some recommended apps have been installed:

 * PHPStorm                 The recommended editor for PHP projects.
    Documentation: https://www.jetbrains.com/help/phpstorm/getting-started.html

 * Herd                     Development environment for PHP projects.
    Documentation: https://herd.laravel.com/docs/1/getting-started/about-herd

 * DBngin                   Database runtime version manager
    Documentation: https://dbngin.com

 * TablePlus                Database management interface
    Documentation: https://docs.tableplus.com

"

    warn 'Please note that some of these tools may require a license to use.'

    warn 'If you have not backed up via Mackup yet, then run `mackup backup` to symlink preferences for a wide collection of apps to your dropbox. If you already had a backup via mackup run `mackup restore` You'\''ll find more info on Mackup here: https://github.com/lra/mackup.'
}

install() {
    ohai 'This script will install all the required tools and utilities to develop Laravel Apps!'

    reset_configs
    silent_login
    install_zsh
    symlink_dotfiles


    install_brew
    install_herd
    install_dbngin
    install_tools

    start_herd

    auth_github

    touch ~/.zshrc

    farewell
}

install
